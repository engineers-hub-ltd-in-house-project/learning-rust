/*
 * スレッドの基本
 *
 * この例では、Rustでスレッドを作成する基本的な方法を示しています。
 * Rustでは標準ライブラリの`std::thread`モジュールを使って並行処理を実現します。
 *
 * スレッドを使うと：
 * - 複数の処理を同時に実行できる
 * - CPUのマルチコアを効率的に活用できる
 * - 処理の応答性を向上させることができる
 *
 * この例では、メインスレッドとは別にスレッドを起動し、
 * それぞれのスレッドで処理を行う様子を示しています。
 */

use std::thread;

fn main() {
    // 新しいスレッドを作成
    thread::spawn(|| {
        println!("新しいスレッドで実行中");
    });

    // メインスレッドで実行
    println!("メインスレッドで実行中");

    // 少し待機（この例では新しいスレッドが完了する前にメインスレッドが終了する可能性がある）
    std::thread::sleep(std::time::Duration::from_millis(10));
}
