/*
 * 文字列スライス
 *
 * この例では、Rustの文字列スライス（&str）の使い方を示しています。
 * 文字列スライスは文字列の一部分を参照するもので、所有権を持ちません。
 *
 * 文字列スライスの特徴：
 * 1. [開始位置..終了位置] の構文で文字列の一部を切り出す
 * 2. スライスは元の文字列への参照（&str型）
 * 3. スライスは元の文字列の所有権を持たない
 * 4. +演算子でスライスや文字列を連結できる
 * 5. インデックスはバイト単位なのでマルチバイト文字に注意
 *
 * この例では「Hello,Rust World!」という文字列を複数のスライスに分割し、
 * それらを異なる順序で連結して新しい文字列を作成しています。
 */

fn main() {
    let s1 = String::from("Hello,Rust World!");
    let s2 = &s1[0..5];
    let s3 = &s1[6..10];
    let s4 = &s1[11..16];
    let s5 = String::new() + s4 + s3 + s2;
    println!("{}", s5);
}
