/*
 * 変数の再代入エラー
 *
 * この例では、Rustでイミュータブル（不変）変数に再代入しようとすると
 * コンパイルエラーが発生することを示しています。
 * 
 * Rustでは、デフォルトで変数はイミュータブルであり、一度値を代入すると
 * 変更できません。これにより予期しない変数の変更を防ぎ、安全性を高めています。
 * 
 * このコードは、変数xに最初に5を代入し、その後に10を再代入しようとしています。
 * しかし、xはイミュータブルなので、このコードはコンパイルエラーになります。
 */

fn main() {
    let x = 5;
    println!("The value of x is: {}", x);
    x = 10; // コンパイルエラー: xはイミュータブル
    println!("The value of x is: {}", x);
}
