/*
 * クロージャの基本
 *
 * この例では、Rustのクロージャ（無名関数）の基本的な使い方を示しています。
 * クロージャは、関数のように呼び出せる匿名の関数で、その環境の変数を
 * キャプチャして使用することができます。
 * 
 * クロージャの特徴：
 * 1. 関数と違い、型注釈を省略できることが多い（型推論される）
 * 2. |param1, param2, ...| { 本体 } という構文を使う
 * 3. 環境の変数を自動的にキャプチャできる
 * 4. 変数に代入したり、関数の引数として渡したりできる
 * 
 * この例では、簡単な計算を行うクロージャを定義し、それを呼び出す方法を示しています。
 */

fn main() {
    let calc = |max| {
        let mut result = 0;
        for n in 0..max {
            result += n;
        }
        result
    };

    let print_msg = |max| {
        println!("{} までの合計は、{} です。", max, calc(max));
    };

    print_msg(100);
    print_msg(200);
    print_msg(300);
}
