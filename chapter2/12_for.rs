/*
 * forループによる繰り返し
 *
 * この例では、Rustのforループを使って範囲（range）の各要素に対して
 * 繰り返し処理を行う方法を示しています。
 *
 * forループの特徴：
 * 1. コレクション（配列、ベクタ、範囲など）の各要素に対して処理を行う
 * 2. 範囲表記（1..=100）を使って、開始値から終了値までの範囲を指定できる
 * 3. ..は終了値を含まず、..=は終了値を含む
 * 4. インデックス管理が自動的に行われるため、境界外アクセスの心配がない
 *
 * この例では、1から100までの整数の合計を計算するために
 * forループと範囲表記を使用しています。
 */

fn main() {
    let max: i32 = 100;
    let mut ans: i32 = 0;

    // 1からmaxまでの範囲をループ
    for item in 1..=max {
        ans += item;
    }

    println!("1から{}までの合計は、{} です。", max, ans);
}
